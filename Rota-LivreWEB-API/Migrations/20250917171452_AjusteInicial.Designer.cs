// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rota_LivreWEB_API.Data;

#nullable disable

namespace Rota_LivreWEB_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917171452_AjusteInicial")]
    partial class AjusteInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Avaliacao", b =>
                {
                    b.Property<int>("id_avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_avaliacao"));

                    b.Property<DateTime>("data_feedback")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("feedback")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("nome_completo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nota")
                        .HasColumnType("int");

                    b.HasKey("id_avaliacao");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipo_categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_categoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Endereco", b =>
                {
                    b.Property<int>("id_endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_endereco"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cep")
                        .HasColumnType("int");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<string>("nome_rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("numero_rua")
                        .HasColumnType("int");

                    b.HasKey("id_endereco");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Passeio", b =>
                {
                    b.Property<int>("id_passeio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_passeio"));

                    b.Property<bool>("AlternarCurtida")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Enderecoid_endereco")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeCurtidas")
                        .HasColumnType("int");

                    b.Property<bool>("UsuarioJaCurtiu")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UsuarioJaPendente")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("data_hora_ida")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("data_hora_volta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("funcionamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<bool>("ida_e_volta")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("img_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome_passeio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_passeio");

                    b.HasIndex("Enderecoid_endereco");

                    b.ToTable("Passeio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PerguntaSeguranca", b =>
                {
                    b.Property<int>("id_pergunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_pergunta"));

                    b.Property<string>("pergunta_seg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_pergunta");

                    b.ToTable("PerguntaSeguranca");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("data_nasc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_pergunta")
                        .HasColumnType("int");

                    b.Property<string>("nome_completo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resposta_seg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Passeio", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Enderecoid_endereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
