// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rota_LivreWEB_API.Data;

#nullable disable

namespace Rota_LivreWEB_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017205754_AjusteRelacionamentoEndereco")]
    partial class AjusteRelacionamentoEndereco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Avaliacao", b =>
                {
                    b.Property<int>("id_avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_avaliacao"));

                    b.Property<DateTime>("data_feedback")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("feedback")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("nome_completo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nota")
                        .HasColumnType("int");

                    b.HasKey("id_avaliacao");

                    b.HasIndex("id_passeio");

                    b.HasIndex("id_usuario");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipo_categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_categoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.CurtidaPasseio", b =>
                {
                    b.Property<int>("id_curtida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_curtida"));

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_curtida");

                    b.HasIndex("id_passeio");

                    b.HasIndex("id_usuario");

                    b.ToTable("CurtidaPasseio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Endereco", b =>
                {
                    b.Property<int>("id_endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_endereco"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cep")
                        .HasColumnType("int");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<string>("nome_rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("numero_rua")
                        .HasColumnType("int");

                    b.HasKey("id_endereco");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Funcionario", b =>
                {
                    b.Property<int>("id_funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_funcionario"));

                    b.Property<string>("nome_funcionario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_funcionario");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Grupo", b =>
                {
                    b.Property<int>("id_grupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_grupo"));

                    b.Property<string>("link_grupo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_grupo");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.GrupoPasseio", b =>
                {
                    b.Property<int>("id_grupo_passeio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_grupo_passeio"));

                    b.Property<int>("id_grupo")
                        .HasColumnType("int");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.HasKey("id_grupo_passeio");

                    b.HasIndex("id_grupo");

                    b.HasIndex("id_passeio");

                    b.ToTable("GrupoPasseio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.GrupoUsuario", b =>
                {
                    b.Property<int>("id_grupo_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_grupo_usuario"));

                    b.Property<int>("id_grupo")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_grupo_usuario");

                    b.HasIndex("id_grupo");

                    b.HasIndex("id_usuario");

                    b.ToTable("GrupoUsuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Localizacao", b =>
                {
                    b.Property<int>("id_localizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_localizacao"));

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("latitude")
                        .HasColumnType("double");

                    b.Property<double>("longitude")
                        .HasColumnType("double");

                    b.Property<double?>("velocidade")
                        .HasColumnType("double");

                    b.HasKey("id_localizacao");

                    b.ToTable("Localizacao");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Passeio", b =>
                {
                    b.Property<int>("id_passeio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_passeio"));

                    b.Property<bool>("AlternarCurtida")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Enderecoid_endereco")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeCurtidas")
                        .HasColumnType("int");

                    b.Property<bool>("UsuarioJaCurtiu")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UsuarioJaPendente")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("funcionamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<string>("img_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome_passeio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_passeio");

                    b.HasIndex("Enderecoid_endereco");

                    b.ToTable("Passeio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioFavorito", b =>
                {
                    b.Property<int>("id_favorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_favorito"));

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_favorito");

                    b.HasIndex("id_passeio");

                    b.HasIndex("id_usuario");

                    b.ToTable("PasseioFavorito");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioFuncionario", b =>
                {
                    b.Property<int>("id_passeio_funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_passeio_funcionario"));

                    b.Property<int>("id_funcionario")
                        .HasColumnType("int");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.HasKey("id_passeio_funcionario");

                    b.HasIndex("id_funcionario");

                    b.HasIndex("id_passeio");

                    b.ToTable("PasseioFuncionario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioPendente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_adicao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_passeio")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_passeio");

                    b.HasIndex("id_usuario");

                    b.ToTable("passeiospendentes");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PerguntaSeguranca", b =>
                {
                    b.Property<int>("id_pergunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_pergunta"));

                    b.Property<string>("pergunta_seg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_pergunta");

                    b.ToTable("PerguntaSeguranca");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("data_nasc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_pergunta")
                        .HasColumnType("int");

                    b.Property<string>("nome_completo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resposta_seg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_pergunta");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.UsuarioLocalizacao", b =>
                {
                    b.Property<int>("id_usuario_localizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_usuario_localizacao"));

                    b.Property<int>("id_localizacao")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_usuario_localizacao");

                    b.HasIndex("id_localizacao");

                    b.HasIndex("id_usuario");

                    b.ToTable("UsuarioLocalizacao");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Avaliacao", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passeio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.CurtidaPasseio", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passeio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.GrupoPasseio", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("id_grupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Passeio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.GrupoUsuario", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("id_grupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Passeio", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Enderecoid_endereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioFavorito", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passeio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioFuncionario", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("id_funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Passeio");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.PasseioPendente", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Passeio", "Passeio")
                        .WithMany()
                        .HasForeignKey("id_passeio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passeio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.Usuario", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.PerguntaSeguranca", "PerguntaSeguranca")
                        .WithMany()
                        .HasForeignKey("id_pergunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerguntaSeguranca");
                });

            modelBuilder.Entity("Rota_LivreWEB_API.Models.UsuarioLocalizacao", b =>
                {
                    b.HasOne("Rota_LivreWEB_API.Models.Localizacao", "Localizacao")
                        .WithMany()
                        .HasForeignKey("id_localizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rota_LivreWEB_API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localizacao");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
